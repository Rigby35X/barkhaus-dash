export declare enum ValueType {
    STRING = "string",
    NUMBER = "number",
    DATA_SOURCE = "dataSource"
}
export declare enum AnyTypeOperation {
    equals = "equals",
    isTruthy = "isTruthy",
    isFalsy = "isFalsy",
    isDefined = "isDefined",
    isNull = "isNull",
    isUndefined = "isUndefined",
    isArray = "isArray",
    isObject = "isObject",
    isString = "isString",
    isNumber = "isNumber",
    isBoolean = "isBoolean",
    isDefaultValue = "isDefaultValue"
}
export declare enum NumberOperation {
    greaterThan = ">",
    lessThan = "<",
    greaterThanOrEqual = ">=",
    lessThanOrEqual = "<=",
    equals = "=",
    notEquals = "!="
}
export declare enum StringOperation {
    contains = "contains",
    startsWith = "startsWith",
    endsWith = "endsWith",
    equalsIgnoreCase = "equalsIgnoreCase",
    trimEquals = "trimEquals"
}
export declare const OPERATORS: {
    string: StringOperation[];
    number: NumberOperation[];
    dataSource: (StringOperation | NumberOperation | AnyTypeOperation)[];
};
